library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
cces <- drop_na(read.csv(url("https://www.dropbox.com/s/ahmt12y39unicd2/cces_sample_coursera.csv?raw=1")))
cel <- read.csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
library(tidyverse)
cces <- drop_na(read.csv(url("https://www.dropbox.com/s/ahmt12y39unicd2/cces_sample_coursera.csv?raw=1")))
cel <- read.csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
library(tidyverse)
cces <- drop_na(read.csv(url("https://www.dropbox.com/s/ahmt12y39unicd2/cces_sample_coursera.csv?raw=1")))
cel <- read.csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
ggplot(cces,aes(x = educ,y=ideo5)) +
geom_jitter()
ggplot(cces,aes(x=educ,y=ideo5)) +
geom_jitter()+
geom_smooth()
ggplot(cces,aes(x=educ,y=ideo5)) +
geom_jitter()+
geom_smooth()
ggplot(cces,aes(x = educ,y=ideo5))+
geom_jitter() +
geom_smooth(method = "lm")
ggplot(cces,aes(x = educ,y=ideo5))+
geom_jitter() +
geom_smooth(method = "lm",level = 0.9)
install.packages("GGally")
# install.packages("GGally")
library(GGally)
# install.packages("GGally")
library(GGally)
var1 = runif(100,min = 0,max = 1)
var2 = var+ rnorm(100,mean = 1,sd = .2)
var1 = runif(100,min = 0,max = 1)
var2 = var+ rnorm(100, mean = 1,sd = .2)
var1 = runif(100,min = 0,max = 1)
var2 = var+ rnorm(100, 1,.2)
rnorm(n = 100, mean = 1,sd = .2)
var+ rnorm(n = 100, mean = 1,sd = .2)
var1 = runif(100,min = 0,max = 1)
var2 = var1 + rnorm(n = 100, mean = 1,sd = .2)
var3 = var1 * (-rnorm(100,mean = 1,sd = .2))
df = tibble(var1,var2,var3)
ggpairs(df)
var1 <- runif(100,min = 0,max = 1)
var2 <-var1 + rnorm(n = 100, mean = 1,sd = .2)
var3 <-var1 * (-rnorm(100,mean = 1,sd = .2))
df <-tibble(var1,var2,var3)
head(df)
ggpairs(df)
set.seed(1234)
var1 <- runif(100,min = 0,max = 1)
var2 <-var1 + rnorm(n = 100, mean = 1,sd = .2)
var3 <-var1 * (-rnorm(100,mean = 1,sd = .2))
df <-tibble(var1,var2,var3)
head(df)
ggpairs(df)
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "red")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter)
diag = list(countinuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "red")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(countinuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "red")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .5,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(countinuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "red")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .5,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "red")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "blue")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
install.packages("ggcorrplot")
install.packages("ggthemes")
library(ggcorrplot)
library(ggthemes)
library(ggcorrplot)
library(ggthemes)
??cor
?cor
df <- cces %>% select("educ","pid7","pew_religimp")
r <- cor(df,use = "complete.obs")
ggcorrplot(r)
ggcorrplot(r,type = "lower")
ggcorrplot(r,type = "lower",
title = "Correlations",
colors = c("yellow","green","blue"),
outline.color = "purple")
ggcorrplot(r,type = "lower",title = "Correlations",
ggtheme = theme_wsj())
cel_114 <- cel %>% filter(congress == 114)
members <- sample_n(cel_114,25)
ggplot(members,aes(x=les,y=thomas_name)) +
geom_point()
ggplot(members,aes(x=les,y=thomas_name)) +
geom_point(size = 5) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed",color = "blue"))+
labs(x="Legislative Effectiveness",y="")
?reorder
# ?reorder
ggplot(members,aes(x = reorder(thomas_name,les),y=les)) +
geom_point() +
geom_segment(aes(x = thomas_name,xend = thomas_name, y = 0, yend = les)) +
theme(axis.text.x = element_text(angle = 90))
var1 <- runif(n = 10,min = 0,max = 25)
time <-  seq(1:10)
df <- tibble(var1,time)
ggplot(df,aes(x = time,y=var1)) +
geom_area()
set.seed(12345)
var1 <- runif(n = 10,min = 0,max = 25)
time <-  seq(1:10)
df <- tibble(var1,time)
head(df)
ggplot(df,aes(x = time,y=var1)) +
geom_area()
ggplot(df,aes(x = time,y=var1)) +
geom_area() +
guides(fill = FALSE)
ggplot(df,aes(x = time,y=var1,fill = "red")) +
geom_area() +
guides(fill = FALSE)
ggplot(df,aes(x = time,y=var1,fill = "red")) +
geom_area()
# guides(fill = FALSE)
ggplot(df,aes(x = time,y=var1,fill = "red")) +
geom_area() +
guides(fill = FALSE)
ggplot(df,aes(x = time,y=var1,fill = "red")) +
geom_area() +
guides(<scale> = "none")
ggplot(df,aes(x = time,y=var1,fill = "red")) +
geom_area() +
guides(fill = FALSE)
set.seed(1234)
Bob <- tibble(person = rep("Bob",5),time = seq(1:5),change = runif(5,0,25))
Sue <- tibble(person = rep("Sue",5),time = seq(1:5),change = runif(5,0,25))
Lisa <- tibble(person = rep("Lisa",5),time = seq(1:5),change = runif(5,0,25))
df <- bind_rows(Bob,Sue,Lisa)
head(df)
ggplot(df,aes(x = time,y=change,fill = person)) +
geom_area()
df_wide <- df %>%
pivot_wider(id_cols = time,values_from = change, names_from = person)
df_wide
df$total <- df_wide$Bob + df_wide$Sue + df_wide$Lisa
df$total <-
df_wide$Bob +
df_wide$Sue +
df_wide$Lisa
df_wide$total <-
df_wide$Bob +
df_wide$Sue +
df_wide$Lisa
df_wide$total
install.packages("ggalt")
library(ggalt)
df2 <- df %>%
filter(time == 1 | time == 5) %>%
pivot_wider(names_from = time,values_from = change) %>%
rename(year1 = `1`,year5 = `5`)
df2
library(ggalt)
df2 <- df %>%
filter(time == 1 | time == 5) %>%
pivot_wider(names_from = time,values_from = change) %>%
rename(year1 = `1`,year5 = `5`)
df2
ggplot(df2,
aes(y=person,
x = year1,
xend = year5)) +
geom_dumbbell()
ggplot(df2,
aes(y=reorder(person,year1),
x = year1,
xend = year5)) +
geom_dumbbell()
ggplot(df2,
aes(y=reorder(person,year1),
x = year1,
xend = year5)) +
geom_dumbbell(
colour_x = "purple",
colour_xend = "red",
size_x = 3,
size_xend = 3
)
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(colour = "blue")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
my_scatter <- function(data,mapping){
ggplot(data=data,mapping = mapping) +
geom_jitter(color = "blue")
}
my_density <- function(data,mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha = .05,fill = 'red')
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
install.packages("ggalluvial")
library(ggalluvial)
group1 <- tibble(groupid = groupid <- rep("group1",7),
studentID = sample(seq(from=1,to =20),7),
gender = sample(c("M","F"),7,replace = TRUE),
grades = sample(c("High pass","Pass","Fail"),7,replace = TRUE))
group2 <- tibble(groupid = groupid <- rep("group2",7),
studentID = sample(seq(from=21,to =30),7),
gender = sample(c("M","F"),7,replace = TRUE),
grades = sample(c("High pass","Pass","Fail"),7,replace = TRUE))
group3 <- tibble(groupid = groupid <- rep("group3",7),
studentID = sample(seq(from=31,to =40),7),
gender = sample(c("M","F"),7,replace = TRUE),
grades = sample(c("High pass","Pass","Fail"),7,replace = TRUE))
students <- bind_rows(group1,group2,group3)
head(students)
students_table <- students %>%
group_by(groupid,gender,grades) %>%
count()
students_table
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium()
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium() +
geom_stratum()
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium() +
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium() +
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum))) +
scale_fill_manual(values = c("purple","green"))
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium() +
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum))) +
scale_fill_manual(values = c("purple","green"))
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum))) +
scale_fill_manual(values = c("purple","green"))
ggplot(students_table,
aes(axis1 = groupid,
axis2 = grades,
y=n)) +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum",aes(label = after_stat(stratum)))
# scale_fill_manual(values = c("purple","green"))
install.packages("packcircles")
library(packcircles)
packing <- circleProgressiveLayout(members$all_pass,sizetype = "area")
members <- add_column(members,packing)
members
head(members)
dat.gg <- circleLayoutVertices(packing,npoints = 50)
ggplot()+
geom_polygon(data = dat.gg,
aes( x= x,y = y,
group = id,
fill = as.factor(id),
alpha = 0.6)) +
geom_text(data = members,aes(
x = x, y = y, size = all_pass,label = thomas_name))+
theme(legend.position = "left") +
coord_equal() #makes your plot square
dat.gg <- circleLayoutVertices(packing,npoints = 50)
ggplot()+
geom_polygon(data = dat.gg,
aes( x= x,y = y,
group = id,
fill = as.factor(id),
alpha = 0.6)) +
geom_text(data = members,aes(
x = x, y = y, size = all_pass,label = thomas_name))+
theme(legend.position = "left") +
coord_equal() #makes your plot square
dat.gg <- circleLayoutVertices(packing,npoints = 50)
ggplot()+
geom_polygon(data = dat.gg,
aes( x= x,y = y,
group = id,
fill = as.factor(id),
alpha = 0.6)) +
geom_text(data = members,aes(
x = x, y = y, size = all_pass,label = thomas_name))+
theme(legend.position = "none") +
coord_equal() #makes your plot square
dat.gg <- circleLayoutVertices(packing,npoints = 50)
ggplot()+
geom_polygon(data = dat.gg,
aes( x= x,y = y,
group = id,
fill = as.factor(id),
alpha = 0.6)) +
geom_text(data = members,aes(
x = x, y = y, size = all_pass,label = thomas_name))+
theme(legend.position = "none") +
coord_equal() #makes your plot square
prop <- c(3,7,9,1,2)
pie(prop)
